openapi: 3.0.0
info:
  version: 0.0.0
  title: Idea Domain API service
servers:
  - url: http://localhost:8080/api/
    description: Local server
  - url: https://ext-data-domain.dev.slyngshot.io/api/
    description: Dev server
paths:
#world-logo
  /world-logo/:
    get:
      tags:
        - world-logo
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/offset-key'
        - in: query
          name: search
          schema:
            type: string
          description: The search query
        - in: query
          required: false
          name: ids
          description: The ID's of the world logos
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: sort-by
          description: The field to sort by
          schema:
            type: string
            enum:
              - id
              - name
        - in: query
          required: false
          name: sort-order
          description: The order to sort by
          schema:
            type: string
            enum:
              - ASC
              - DESC
      operationId: GetWorldLogos
      summary: Get world logos
      description: Returns a list of world logos
      security:
      - BearerAuth: []
      responses:
        200:
          description: Returns a list of world logos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/worldLogo'
        500:
          $ref: '#/components/responses/errorResponse'
    post:
      tags:
        - world-logo
      parameters:
        - $ref: '#/components/parameters/api-key'
      operationId: CreateWorldLogo
      summary: Create world logo
      description: Create a new world logo record, if key already exists, it will be updated
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/worldLogoInput"

      responses:
        200:
          description: Returns created world logo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/worldLogo'
        500:
          $ref: '#/components/responses/errorResponse'

  /world-logo/{id}:
    parameters:
      - $ref: '#/components/parameters/idParam'
    get:
      tags:
      - world-logo
      operationId: GetWorldLogoById
      summary: Get world logo by id
      description: Returns a single world logo record
      security:
      - BearerAuth: []
      responses:
        200:
          description: Returns a single world logo record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/worldLogo'

        404:
          $ref: '#/components/responses/notFoundResponse'
        500:
          $ref: '#/components/responses/errorResponse'

    delete:
      tags:
      - world-logo
      operationId: DeleteWorldLogoById
      parameters:
        - $ref: '#/components/parameters/api-key'
      summary: Delete world logo by id
      description: Deletes a single world logo record
      security:
      - BearerAuth: []
      responses:
        200:
          $ref: '#/components/responses/okResponse'
        500:
          $ref: '#/components/responses/errorResponse'

tags:
  - name: world-logo
    description: 'World Logo API'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Enter the token with the `Bearer  ` prefix, e.g. \"Bearer abcde12345\"."

  schemas:
    error:
      type: object
      required:
        - message
        - fields
      properties:
        message:
          type: string
        fields:
          type: object
    worldLogo:
      type: object
      required:
        - id
        - name
        - logo_path
        - created_at
        - updated_at
      properties:
        id:
          type: string
        name:
          type: string
        logo_path:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    worldLogoInput:
      type: object
      required:
        - src_key
        - name
        - logo_base64_str
      properties:
        src_key:
          type: string
        name:
          type: string
        logo_base64_str:
          type: string

  parameters:
    api-key:
      in: header
      name: X-API-KEY
      schema:
        type: string
      required: true
      description: API key to access the API
    idParam:
      in: path
      name: id
      description: The id parameter.
      required: true
      schema:
        type: string
    limit:
      in: query
      name: limit
      required: true
      schema:
        type: integer
        format: uint64
        maximum: 100
        minimum: 1
        default: 25
      description: The number of items to return
    offset:
      in: query
      name: offset
      schema:
        type: integer
        format: uint64
      description: The number of items to skip before starting to collect the result set, has less priority than offset-key
    offset-key:
      in: query
      name: offset-key
      schema:
        type: string
      description: The key to use for offsetting the result set, has more priority than offset

  responses:
    htmlResponse:
      description: OK
      content:
        text/html:
          schema:
            type: string
    okResponse:
      description: OK
    notFoundResponse:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    invalidInputResponse:
      description: The input is not valid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    forbiddenResponse:
      description: Operation is not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    errorResponse:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
